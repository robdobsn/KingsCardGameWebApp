// Generated by CoffeeScript 1.6.3
var KingsGame,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

KingsGame = (function() {
  function KingsGame() {
    this.dragCellCallback = __bind(this.dragCellCallback, this);
    this.clickCallback = __bind(this.clickCallback, this);
    this.playingCards = new PlayingCards();
    this.gameBoard = new GameBoard(this.playingCards);
    this.displayBoard = new DisplayBoard(this.selCellCallback, this.dragCellCallback, this.selCompleteCallback, this.clickCallback, this.playingCards);
  }

  KingsGame.prototype.start = function() {
    this.gameBoard.deal(this.playingCards);
    this.gameBoard.removeAces();
    return this.playGame();
  };

  KingsGame.prototype.playGame = function() {
    console.log("Playing Kings");
    return this.displayBoard.showGameState(this.gameBoard);
  };

  KingsGame.prototype.clickCallback = function(clickedCardId) {
    var fromCol, fromRow, movedOk, toCol, toRow, _ref;
    _ref = this.gameBoard.moveValidCardToEmptyPlace(clickedCardId), movedOk = _ref[0], fromRow = _ref[1], fromCol = _ref[2], toRow = _ref[3], toCol = _ref[4];
    if (movedOk) {
      return this.displayBoard.showGameState(this.gameBoard);
    }
  };

  KingsGame.prototype.dragCellCallback = function(fromId, toId) {
    console.log("Dragged", fromId, toId);
    if (this.gameBoard.moveCardIfValid(fromId, toId)) {
      return this.displayBoard.showGameState(this.gameBoard);
    }
  };

  return KingsGame;

})();
